{"version":3,"sources":["components/Fallback/Fallback.js","components/ErrorView/ErrorView.js","components/Area/Area.js","components/Game/Game.js","helpers/constants/apiUrl.js","App.js","reportWebVitals.js","index.js"],"names":["Fallback","className","ErrorView","error","Area","size","handleHover","map","useMemo","i","push","k","createMap","row","rowI","cell","cellI","onMouseEnter","col","handleToggle","Game","props","fetchAppMode","a","axios","get","process","data","setState","appModes","selectOptions","value","label","handleSelectChange","option","currentMode","history","state","historyListRef","createRef","this","_","prevState","length","current","scrollTop","scrollHeight","placeholder","options","onChange","field","ref","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.513d2926.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Fallback() {\n  return (\n    <div className=\"fallback\">\n      Loading ...\n    </div>\n  )\n}\n\nexport default Fallback\n","import React from 'react'\n\nconst ErrorView = ({error}) => {\n  return (\n    <div className=\"error_view\">\n      {error}\n    </div>\n  )\n}\n\nexport default ErrorView\n","import React, { useMemo } from 'react';\nimport './Area.css';\n\nconst createMap = (size) => {\n  const map = [];\n  for(let i=0; i<size; i++){\n    map.push([]);\n    for(let k=0; k<size; k++){\n      map[i].push(false);\n    }\n  }\n  return map;\n};\n\nconst Area = ({ size=0, handleHover }) => {\n  const map = useMemo(()=>createMap(size), [size]);\n\n  const handleToggle = (row, col)=>{\n    if(handleHover) handleHover(row, col);\n    map[row][col] = !map[row][col];\n  }\n  return (\n    <div className=\"area\">\n      {map.map((row, rowI)=>(\n        <div \n          className=\"area__row\" \n          key={`area-row-${rowI}`}\n        >\n          {row.map((cell, cellI)=>( \n            <div \n              key={`area-row-${rowI}-cell-${cellI}`} \n              className={`area__cell ${cell ? \"active\" : \"\"}`}\n              onMouseEnter={()=>handleToggle(rowI, cellI)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Area;","import { Component, createRef } from 'react'\nimport axios from 'axios'\nimport { API_URL } from '../../helpers/constants/apiUrl'\nimport Fallback from '../Fallback/Fallback';\nimport ErrorView from '../ErrorView/ErrorView';\nimport Area from '../Area/Area';\nimport Select from 'react-select';\n\nimport './Game.css';\n\nexport class Game extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      appModes: null,\n      currentMode: null,\n      error: null,\n      history: []\n    };\n    this.historyListRef = createRef();\n  }\n\n  fetchAppMode = async ()=>{\n    try {\n      const {data} = await axios.get(API_URL);\n      this.setState({ appModes: data });\n    } catch (error) {\n      this.setState({error});\n    }\n  }\n\n  componentDidMount(){\n    this.fetchAppMode();\n  }\n  componentDidUpdate(_, prevState){\n    if(prevState.currentMode !== this.state.currentMode){\n      this.setState({ history: [] });\n    }\n    if(prevState.history.length !== this.state.history.length){\n      this.historyListRef.current.scrollTop = this.historyListRef.current.scrollHeight;\n    }\n  }\n\n  selectOptions = [\n    {value: \"easyMode\", label: \"Easy\"},\n    {value: \"normalMode\", label: \"Normal\"},\n    {value: \"hardMode\", label: \"Hard\"},\n  ]\n\n  handleSelectChange = (option)=>{\n    this.setState({ currentMode: option.value });\n  }\n\n  handleHover = (row, col)=>{\n    this.setState({\n      history: [...this.state.history, {row, col}]\n    });\n  }\n\n  render() {\n    const { appModes, currentMode, error } = this.state;\n    if(!this.state.appModes) return <Fallback/>;\n    if(error) return <ErrorView error={error}/>;\n    return (\n      <div className=\"game\">\n        <div className=\"game__left\">\n        <div className=\"app_mode\">\n          <p className=\"app_mode__header\">App mode:</p>\n          <Select\n            placeholder=\"Select app mode...\"\n            className=\"app_mode__select\"\n            options={this.selectOptions}\n            onChange={this.handleSelectChange}\n          />\n        </div>\n        {!!currentMode && <Area handleHover={this.handleHover} size={appModes?.[currentMode].field}/>}\n        </div>\n        <div className=\"game__right game_history\">\n          <h3 className=\"game_history__header\">Hover Squares</h3>\n          <ul className=\"game_history__list\" ref={this.historyListRef}>\n            {this.state.history.map(({row, col}, i)=>(\n              <li \n                className=\"game_history__item\"\n                key={`game_history__item-${i}`}\n              >\n                {`Row ${row+1} Col ${col+1}`}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game\n","export const API_URL = process.env.REACT_APP_API_URL || 'https://demo1030918.mockable.io';","import Game from './components/Game/Game';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}